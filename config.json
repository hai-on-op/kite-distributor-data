{
  "processRawAirdropDataInput": "KITE_Airdrop_Addresses.csv",
  "processRawAirdropDataOutput": "processed-raw-airdrop-data.json",
  "processRegularDistributionDataInput": "final-raw-regular-distribution-data.csv",
  "processRegularDistributionDataOutput": "final-all-airdrop-data.json",
  "removeScreenedAddressesInput": "final-all-airdrop-data.json",
  "removeScreenedAddressesOutput": "final-screened-airdrop-data.json",
  "sumAirdropAllocationGroupsInput": "final-screened-airdrop-data.json",
  "sumAirdropAllocationGroupsOutput": "summed-airdrop-allocation-group-data.json",
  "calculateTokenDistributionRatesInput": "summed-airdrop-allocation-group-data.json",
  "calculateTokenDistributionRatesOutput": "token-distribution-rates.json",
  "calculateTokensPerAddressInput": "final-screened-airdrop-data.json",
  "calculateTokensPerAddressOutput": "tokens-per-address-data.json",
  "formatMerkleTreeRawDataInput": "tokens-per-address-data.json",
  "formatMerkleTreeRawDataOutput": "merkle-tree-raw-data.json",
  "generateMerkleTreeInput": "merkle-tree-raw-data.json",
  "generateMerkleTreeOutput": "merkle-tree.json",
  "merkleRootOutput": "merkle-root.json",
  "generateMerkleProofsInput": "merkle-tree.json",
  "generateMerkleProofsOutput": "merkle-proofs.json",
  "airdropGroups": ["reflexer", "testnet"],
  "reflexerAirdropGroups": [
    "reflexer-aave-mint",
    "reflexer-uni-v2",
    "reflexer-uni-v3",
    "reflexer-curve",
    "reflexer-stakers",
    "reflexer-tally",
    "reflexer-delegated",
    "reflexer-savior",
    "reflexer-safe"
  ],
  "testnetAirdropGroups": [
    "testnet-opened-safe",
    "testnet-auction",
    "testnet-liquidated",
    "testnet-any-other"
  ],
  "opEcosystemAirdropGroups": [
    "op-ecosystem-op-dao-voters-with-50-votes",
    "op-ecosystem-hop-dai-bridger",
    "op-ecosystem-cbeth-bridger",
    "op-ecosystem-dai-bridger",
    "op-ecosystem-steth-bridger",
    "op-ecosystem-dsentra-donor",
    "op-ecosystem-2023-susd-minter"
  ],
  "regularDistributionGroups": [
    "team-and-advisors",
    "partnerships",
    "dao-treasury",
    "community-alignment",
    "early-usage-incentives-multisig",
    "flx-alignment-multisig",
    "internal-vest-multisig",
    "partnerships-multisig"
  ],
  "communityAlignmentAllocationTotal": 182500,
  "communityAlignmentGroupAllocations": {
    "reflexer-total": 160000,
    "reflexer-aave-mint": 5000,
    "reflexer-uni-v2": 25000,
    "reflexer-uni-v3": 15000,
    "reflexer-curve": 5000,
    "reflexer-stakers": 25000,
    "reflexer-tally": 15000,
    "reflexer-delegated": 15000,
    "reflexer-savior": 5000,
    "reflexer-safe": 50000,
    "testnet-total": 22500,
    "testnet-opened-safe": 12500,
    "testnet-auction": 2500,
    "testnet-liquidated": 2500,
    "testnet-reserved": 5000
  },
  "placeholderAddress": "0x0000000000000000000000000000000000000000",
  "regularDistributionAllocations": {
    "0X297BF847DCB01F3E870515628B36EABAD491E5E8": 55265,
    "0X0A453F46F8AE9A99B2B901A26B53E92BE6C3C43E": 17500,
    "0XCAFD432B7ECAFFF352D92FCB81C60380D437E99D": 17500,
    "0X9640F1CB81B370186D1FCD3B9CBFA2854E49555E": 17500,
    "0X82A7B471D33B38E9AF0C21E0E1EF35C1853CBF61": 5000,
    "0XFF34019E145590EBC9402277A780970BBAF9A83A": 2500,
    "0X60EFAC991AE39FA6A594AF58FD6FCB57940C3AA7": 2500,
    "0X35F16AE25B19B703F0BF254148068A08886EC314": 2500,
    "0X5D1B617BC3F470F770A29E94DADD4397024FDF04": 500,
    "0X74FEA3FB0ED030E9228026E7F413D66186D3D107": 29600,
    "0XEC1C77AC05915F099C7C56900D63823FA4308800": 1250,
    "0X0D9B71891DC86400ACC7EAD08C80AF301CCB3D71": 1250,
    "0XBEAE83D58B6E26AC6B906C4129E0D96722F5DEAA": 1250,
    "0X9644A6920BD0A1923C2C6C1DDDF691B7A42E8A65": 625,
    "0X5248BE8B6C9B7257695275EBD7C3918326151AE6": 625,
    "0X91CE2F083D59B832F95F90AA0997168AE051A98A": 2500,
    "0XDCB421CC4CBB7267F3B2CACAB44EC18AEBED6724": 254953.65,
    "0X21A1EC8C62BBDAD4680742B88695F06F55A51BDA": 39942,
    "0X638D5CCAF57446363E8CA5BD09B220EE7A87E8C6": 200000,
    "0XDC1E6DD8BDF7FD3B8F9FE663EE5E3340CEFAC854": 117765,
    "0X1EF475097FD67A8429DFC1065F774C0368E6312D": 47100
  },
  "tallySlugToName": {
    "reflexer": "Reflexer",
    "reflexer-aave-mint": "Minted RAI and deposited to Aave",
    "reflexer-uni-v2": "Provided LP on Uni V2 RAI/ETH",
    "reflexer-uni-v3": "Provided LP on Uni V3 RAI/DAI",
    "reflexer-curve": "Provided LP on Curve RAI 3pool",
    "reflexer-stakers": "Staked FLX",
    "reflexer-tally": "Voted on Tally",
    "reflexer-delegated": "Delegated FLX on Tally",
    "reflexer-savior": "Connected a RAI Safe Savior",
    "reflexer-safe": "Opened a SAFE",
    "testnet": "HAI Testnet",
    "testnet-opened-safe": "Opened a SAFE",
    "testnet-auction": "Participated in an auction.",
    "testnet-liquidated": "Liquidated a SAFE",
    "testnet-any-other": "Any other action",
    "regular-distribution": "Regular Distribution",
    "regular-distribution-team-and-advisors": "Team & Advisors",
    "regular-distribution-partnerships": "Partnerships",
    "regular-distribution-dao-treasury": "DAO Treasury",
    "regular-distribution-early-usage-incentives-multisig": "Early Usage Incentives Multi-sig",
    "regular-distribution-flx-alignment-multisig": "FLX Alignment Multi-sig",
    "regular-distribution-internal-vest-multisig": "Internal Vesting Multi-sig",
    "regular-distribution-partnerships-multisig": "Partnerships Multi-sig",
    "op-ecosystem": "OP Ecosystem",
    "op-ecosystem-op-dao-voters-with-50-votes": "Voted on an OP DAO proposal with at least 50 OP",
    "op-ecosystem-hop-dai-bridger": "Bridged DAI to Optimism from mainnet via Hop",
    "op-ecosystem-cbeth-bridger": "cbETH Bridger",
    "op-ecosystem-dai-bridger": "Bridged DAI to Optimism from mainnet",
    "op-ecosystem-steth-bridger": "Bridged stETH to Optimism from mainnet",
    "op-ecosystem-dsentra-donor": "Donated to dSentra",
    "op-ecosystem-2023-susd-minter": "Minted sUSD (Synthetix USD) in 2023"
  },
  "distributionGroupAllocations": {}
}
